# Template Version: 2018-01-07
# DEV Team Managed Environment Variables

# These variables provide fine grained control over your CI build execution
# There are multiple sections that each correspond to different git branches
# which in turn, map to different environments you may want to enable automation for

# Note:
# Some settings may be overridden as mandatory for certain builds (e.g. git tagging of release builds)

# <branch.name>.git.tag=1                       # git tag the build (e.g. develop_AAA_Frontend_1.0.2, <branch.name>_<app.name>_<component.name>_<major>.<minor>.<build>)

# <branch.name>.test=1                          # Run UNIT test steps       : ./cgbuild/interface/<os>/test.<ext>
# <branch.name>.parse.junit=1                   # To skip test execution, the parsers and above test property must both be disabled
# <branch.name>.parse.mstest=1                  # The actual parsing task must be 'enabled' in Bamboo, these properties
# <branch.name>.parse.nunit=1                   # by themselves cannot enable the parsing of test results

# <branch.name>.analyze=1                       # Run Code analysis steps   : ./cgbuild/interface/<os>/analyze.<ext>

# <branch.name>.package=1                       # Run packaging steps       : ./cgbuild/interface/<os>/package.<ext>
# <branch.name>.copy.to.nas=1                   # copy (build package) to nas
# <branch.name>.generate.pkg.definition=1       # create package definition (deployment automation input)
# <branch.name>.register.package=1              # register package (with deployment automation system)
# <branch.name>.veracode.project=<Veracode project name> # ATMID_APPNAME_COMPONENTNAME
# <branch.name>.veracode.enable=1 	            # enable Veracode Scan for branch types other than release, which is required
# <branch.name>.veracode.breakbuild=1	        # Set to break the build
# <branch.name>.veracode.severity=4             # Severity 1,2,3,4  -  4 is very high, where 1 is low vulnerabily 
# <branch.name>.veracode.filepath=<> #path or file containing zipped files
# Integration Test Environment Deployment
# <branch.name>.it.env=<Environment_Path>       # Deployment automation configuration
# <branch.name>.it.deploy=1                     # Execute deployment
# Test Automation
# <branch.name>.run.it=1                        # Run post-deployment integration test script (pipeline property)
# <branch.name>.run.scheduled.it=1				# Run post-deployment integration test script for Scheduled Pipeline Plan (pipeline property)
# <branch.name>.run.it.test.job=DummyTestA		# Name of the integrate test job in QM Test Automation Framework (SIA) (pipeline property)
# <branch.name>.run.it.test.env=env   			# Name of the integrate test env in QM Test Automation Framework (SIA) (pipeline property)
# <branch.name>.run.it.test.label=CI_Regression # Name of the integrate test label to supply to QM Test Automation Framework (SIA) (pipeline property)
# <branch.name>.run.it.test.url=<serviceURL> 	# URL of the Jenkins Test Service 
# <branch.name>.run.it.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call

# Acceptance Test Environment Deployment
# <branch.name>.at.env=<Environment_Path>       # Deployment automation configuration
# <branch.name>.at.deploy=1                     # Execute deployment
# Test Automation
# <branch.name>.run.at=1                        # Run post-deployment acceptance test script (pipeline property)
# <branch.name>.run.scheduled.at=1				# Run post-deployment acceptance test script for Scheduled Pipeline Plan (pipeline property)
# <branch.name>.run.at.test.job=DummyTestA		# Name of the acceptance test job in QM Test Automation Framework (SIA) (pipeline property)
# <branch.name>.run.at.test.env=env   			# Name of the acceptance test env in QM Test Automation Framework (SIA) (pipeline property)
# <branch.name>.run.at.test.label=CI_Regression # Name of the acceptance test label to supply to QM Test Automation Framework (SIA) (pipeline property)
# <branch.name>.run.at.test.url=<serviceURL>	# URL of the Jenkins Test Service 
# <branch.name>.run.at.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call

# Manual Test Environment Deployment
# <branch.name>.mt.env=<Environment_Path>       # Deployment automation configuration
# <branch.name>.mt.deploy=1                     # Execute deployment

# Application Component Version
version=1.0

# Do not edit this value unless you have consulted with the SLM team
# Acceptable values:
# default
# sequential-by-container
# parallel-by-container
# sequential-by-composite-package
# parallel-by-composite-package
# sequential-by-deployment-group
# parallel-by-deployment-group
# xld.orchestrator=sequential-by-deployment-group


# XLD Dictionary Management
#  - updates the dictionaries associated with product environments ahead of package deployment
#  - processes dictionary.<env>.properties files
#
# Do not edit this value unless you've read and understand the DEV Guide
#   - https://confluence.capgroup.com/display/SLM/XL+Deploy+Dictionary+Management+Phase+2
#



# Conditional Task Execution (1 = run task, 0 = don't run task)

# dev branch specific properties
develop.test=1
develop.analyze=0
develop.parse.junit=1
develop.parse.mstest=1
develop.parse.nunit=1
develop.copy.to.nas=1
develop.generate.pkg.definition=1
develop.git.tag=1
develop.package=1
develop.register.package=0
develop.veracode.project=<Veracode project name> # ATMID_APPNAME_COMPONENTNAME
develop.veracode.enable=1 	
develop.veracode.breakbuild=1	
develop.veracode.severity=4
develop.veracode.filepath=<> #path or file containing zipped files
develop.veracode.sandbox=<> #name a specific sandbox to be used,  default is '' since the branch name will be used
#---------------------------------#
# Pipeline Variables for AT
#----------------------------------#
# Deployment
develop.at.deploy=0
develop.at.env=<Environment_Path>
# Automated Testing
develop.run.at=0
develop.run.scheduled.at=0
develop.run.at.test.job=<Name_of_Test_Job_in_SIA_Framework>
develop.run.at.test.env=<Name_of_Test_ENV_in_SIA_Framework>
develop.run.at.test.label=<Label_eg_AT_Regression>
develop.run.at.test.url=<serviceURL>	# URL of the Jenkins Test Service 
develop.run.at.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call
#---------------------------------#
# Pipeline Variables for IT
#----------------------------------#
# Deployment
develop.it.deploy=0
develop.it.env=<Environment_Path>
# Automated Testing
develop.run.it=0
develop.run.scheduled.it=0
develop.run.it.test.job=<Name_of_Test_Job_in_SIA_Framework>
develop.run.it.test.env=<Name_of_Test_ENV_in_SIA_Framework>
develop.run.it.test.label=<Label_eg_CI_Regression>
develop.run.it.test.url=<serviceURL>	# URL of the Jenkins Test Service 
develop.run.it.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call
#---------------------------------#
# Pipeline Variables for MT
#----------------------------------#
# Deployment
develop.mt.deploy=0
develop.mt.env=<Environment_Path>

# project branch specific properties
project.test=1
project.analyze=1
project.parse.junit=1
project.parse.mstest=1
project.parse.nunit=1
project.copy.to.nas=1
project.generate.pkg.definition=1
project.git.tag=1
project.package=1
project.register.package=0
project.veracode.project=<Veracode project name> # ATMID_APPNAME_COMPONENTNAME
project.veracode.enable=1 	
project.veracode.breakbuild=1	
project.veracode.severity=4
project.veracode.filepath=<> #path or file containing zipped files
project.veracode.sandbox=<> #name a specific sandbox to be used,  default is '' since the branch name will be used

#---------------------------------#
# Pipeline Variables for AT
#----------------------------------#
# Deployment
project.at.deploy=0
project.at.env=<Environment_Path>
# Automated Testing
project.run.at=0
project.run.scheduled.at=0
project.run.at.test.job=<Name_of_Test_Job_in_SIA_Framework>
project.run.at.test.env=<Name_of_Test_ENV_in_SIA_Framework>
project.run.at.test.label=<Label_eg_AT_Regression>
project.run.at.test.url=<serviceURL>	# URL of the Jenkins Test Service 
project.run.at.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call
#---------------------------------#
# Pipeline Variables for IT
#----------------------------------#
# Deployment
project.it.deploy=0
project.it.env=<Environment_Path>
# Automated Testing
project.run.it=0
project.run.scheduled.it=0
project.run.it.test.job=<Name_of_Test_Job_in_SIA_Framework>
project.run.it.test.env=<Name_of_Test_ENV_in_SIA_Framework>
project.run.it.test.label=<Label_eg_CI_Regression>
project.run.it.test.url=<serviceURL>	# URL of the Jenkins Test Service 
project.run.it.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call
#---------------------------------#
# Pipeline Variables for MT
#----------------------------------#
# Deployment
project.mt.deploy=0
project.mt.env=<Environment_Path>

# feature branch specific properties
feature.test=0
feature.analyze=0
feature.parse.junit=1
feature.parse.mstest=1
feature.parse.nunit=1
feature.copy.to.nas=0
feature.generate.pkg.definition=0
feature.git.tag=0
feature.package=0
feature.register.package=0
feature.veracode.project=<Veracode project name> # ATMID_APPNAME_COMPONENTNAME
feature.veracode.enable=1 	
feature.veracode.breakbuild=1	
feature.veracode.severity=4
feature.veracode.filepath=<> #path or file containing zipped files
feature.veracode.sandbox=<> #name a specific sandbox to be used,  default is '' since the branch name will be used

#---------------------------------#
# Pipeline Variables for AT
#----------------------------------#
# Deployment
feature.at.deploy=0
feature.at.env=<Environment_Path>
# Automated Testing
feature.run.at=0
feature.run.scheduled.at=0
feature.run.at.test.job=<Name_of_Test_Job_in_SIA_Framework>
feature.run.at.test.env=<Name_of_Test_ENV_in_SIA_Framework>
feature.run.at.test.label=<Label_eg_AT_Regression>
feature.run.at.test.url=<serviceURL>	# URL of the Jenkins Test Service 
feature.run.at.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call
#---------------------------------#
# Pipeline Variables for IT
#----------------------------------#
# Deployment
feature.it.deploy=0
feature.it.env=<Environment_Path>
# Automated Testing
feature.run.it=0
feature.run.scheduled.it=0
feature.run.it.test.job=<Name_of_Test_Job_in_SIA_Framework>
feature.run.it.test.env=<Name_of_Test_ENV_in_SIA_Framework>
feature.run.it.test.label=<Label_eg_CI_Regression>
feature.run.it.test.url=<serviceURL>	# URL of the Jenkins Test Service 
feature.run.it.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call
#---------------------------------#
# Pipeline Variables for MT
#----------------------------------#
# Deployment
feature.mt.deploy=0
feature.mt.env=<Environment_Path>

# release branch specific properties
release.test=1
release.analyze=0
release.parse.junit=1
release.parse.mstest=1
release.parse.nunit=1
release.copy.to.nas=1
release.generate.pkg.definition=1
release.git.tag=1
release.package=1
release.register.package=1
release.veracode.project=<Veracode project name> # ATMID_APPNAME_COMPONENTNAME
release.veracode.enable=1 	
release.veracode.breakbuild=1	
release.veracode.severity=4
release.veracode.filepath=<> #path or file containing zipped files
release.veracode.sandbox=<> #name a specific sandbox to be used,  default is ''.  Ignored for release branch

#---------------------------------#
# Pipeline Variables for AT
#----------------------------------#
# Deployment
release.at.deploy=0
release.at.env=<Environment_Path>
# Automated Testing
release.run.at=0
release.run.scheduled.at=0
release.run.at.test.job=<Name_of_Test_Job_in_SIA_Framework>
release.run.at.test.env=<Name_of_Test_ENV_in_SIA_Framework>
release.run.at.test.label=<Label_eg_AT_Regression>
release.run.at.test.url=<serviceURL>	# URL of the Jenkins Test Service 
release.run.at.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call
#---------------------------------#
# Pipeline Variables for IT
#----------------------------------#
# Deployment
release.it.deploy=0
release.it.env=<Environment_Path>
# Automated Testing
release.run.it=0
release.run.scheduled.it=0
release.run.it.test.job=<Name_of_Test_Job_in_SIA_Framework>
release.run.it.test.env=<Name_of_Test_ENV_in_SIA_Framework>
release.run.it.test.label=<Label_eg_CI_Regression>
release.run.it.test.url=<serviceURL>	# URL of the Jenkins Test Service 
release.run.it.test.blocking=1 			# 1 for blocked call, 0 for non-blocking call
#---------------------------------#
# Pipeline Variables for MT
#----------------------------------#
# Deployment
release.mt.deploy=0
release.mt.env=<Environment_Path>
